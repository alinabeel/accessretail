# Generated by Django 2.2 on 2021-06-10 19:32

import core.mixinsModels
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import master_setups.models
import mptt.fields
import re


class Migration(migrations.Migration):

    dependencies = [
        ('master_setups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', core.mixinsModels.UpperCaseCharField(max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='master_setups.Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('import_mode', models.CharField(choices=[('APPEND', 'Append: Add records in the table.'), ('APPENDUPDATE', 'Append/Update: If  records exist update otherwise add.'), ('COPY', 'Copy: Delete all records and repopulate from the source.')], max_length=20)),
                ('frommodel', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to=master_setups.models.handle_upload_logs)),
                ('is_processing', models.CharField(blank=True, choices=[('UPLOADING', 'Uploading'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], max_length=20, null=True)),
                ('process_message', models.CharField(blank=True, max_length=255, null=True)),
                ('skiped_records', models.IntegerField(blank=True, null=True)),
                ('updated_records', models.IntegerField(blank=True, null=True)),
                ('created_records', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
            ],
            options={
                'verbose_name': 'Upload',
                'verbose_name_plural': 'Uploads',
                'db_table': 'upload',
            },
        ),
        migrations.CreateModel(
            name='RegionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
            ],
            options={
                'verbose_name': 'Region Type',
                'verbose_name_plural': 'Region Types',
                'db_table': 'region_type',
                'ordering': ['name'],
                'unique_together': {('country', 'name')},
            },
        ),
        migrations.CreateModel(
            name='IndexCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ManyToManyField(to='master_setups.Category')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
                ('index_setup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.IndexSetup')),
            ],
            options={
                'verbose_name': 'Index Category',
                'verbose_name_plural': 'Index Categries',
                'db_table': 'index_category',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='upload',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_uploads', to='master_setups.Upload'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', core.mixinsModels.UpperCaseCharField(max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='master_setups.Region')),
                ('region_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.RegionType')),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='region_uplaod', to='master_setups.Upload')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'db_table': 'region',
                'ordering': ['name'],
                'unique_together': {('country', 'code', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='OutletType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', core.mixinsModels.UpperCaseCharField(max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('urbanity', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='master_setups.OutletType')),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master_setups.Upload')),
            ],
            options={
                'verbose_name': 'Outlet Type',
                'verbose_name_plural': 'Outlet Types',
                'db_table': 'outlet_type',
                'ordering': ['name'],
                'unique_together': {('country', 'parent', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('code', core.mixinsModels.UpperCaseCharField(max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('insert_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_setups.Country')),
            ],
            options={
                'verbose_name': 'Outlet',
                'verbose_name_plural': 'Outlets',
                'db_table': 'outlet',
                'unique_together': {('country', 'code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('country', 'parent', 'code')},
        ),
    ]
